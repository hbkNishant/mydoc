Select * 

from SUBSET_PROPERTY where name in ('SoSSource','SoSAge','SoSLookup') 

   and subset_id in 

     (select smv.LATEST_REVISION_SUBSET_ID FROM SUBSET_MINOR_VERSION smv 

   JOIN CATEGORY_SUBSET_IDENT_ASSOC csia ON smv.SUBSET_IDENTIFIER_ID = csia.SUBSET_IDENTIFIER_ID 

   JOIN CATEGORY c ON csia.CATEGORY_ID = c.CATEGORY_ID 

   JOIN PRODUCT_VERSION pv ON c.PRODUCT_VERSION_ID = pv.PRODUCT_VERSION_ID 

   JOIN PRODUCT p ON pv.PRODUCT_ID = p.PRODUCT_ID 

WHERE smv.ACTIVE = 1 

--   AND p.PRODUCT_CID = 'PROCEDURES' 

--   AND p.PRODUCT_CID = 'BHPROCEDURES' 

 AND p.PRODUCT_CID = 'MDCR-PROCEDURES' 

 AND pv.VERSION_CID = 'RM24') 



update subset_property set value = 'ALL' where name = 'SoSSource'



Here's a message you can use to communicate the points you've found during your technical review:

---

**Subject: Observations and Clarifications Needed from Technical Review**

Hi [Recipient's Name],

I hope this message finds you well. During my recent review, I came across a few points that I wanted to bring to your attention and clarify:

1. **QnaReviewSummaryPdfMapperV1Test Class:** 
   - At line 627, an extra object of `MedicalReviewSiteOfService` is created. The object is initialized to null, and later, a new object is created within an `if` condition. This seems redundantâ€”can we streamline this by avoiding the initial null assignment?

2. **QnaReviewSummaryTextMapperV1Test Class - TestDMCAAS724_AC2_single_recommendation Method:** 
   - I noticed multiple repeated hardcoded strings. If these are fixed strings, we could consider refactoring them into constants. I'd appreciate some clarification on this to determine the best approach.

3. **QnaReviewSummaryTextMapperV1Test Class - getExpectedMedCodeSetting Method:**
   - At line 846, there are several spaces in a string. It might be more efficient to use the `String.format` method to place spaces before the strings. Could you please confirm if there's a specific requirement for the current format?

4. **QnaReviewSummaryTextMapperViTest Class - TestDMCAAS724_AC5_Additional_flags:** 
   - At line 1110, I'm not certain whether `TestDMCAAS724_AC5_Additional_flags` is intended to be a simple method or a test case. If it's a test case, it appears that the `@Test` annotation is missing. Could you please clarify?

5. **RecommendationMapper Class:**
   - I need more information regarding the code at line 228. Could you provide some context or the intended functionality here?

Please let me know if we need to discuss these points further or if any adjustments should be made.

Best regards,  
[Your Name]

---

Feel free to adjust the message to suit your tone and style!